import os
import time
from collections.abc import Iterable
from datetime import datetime
from functools import partial
from uuid import uuid4

import pandas as pd
import requests
import streamlit as st

from config import CONTRIBUTORS, LINKS

endpoint_ping = os.getenv("API_PING_URI")
endpoint_search = os.getenv("API_SEARCH_URI")
st.text_input = partial(st.text_input, label_visibility="collapsed")


def _run_id() -> str:
    """Generates unique thread-save and multi-machine-resistant folder name for a single run, based on time"""
    return (
        datetime.now().astimezone().strftime("%Y-%m-%d--TZ%z-%H-%M-%S")
        + "--"
        + str(uuid4())
    )


def _write_list(input: Iterable) -> None:
    for item in input:
        st.markdown(f"* {item}")


def call_api_get(url: str) -> dict:
    response = requests.get(url)
    if response.status_code != 200:
        st.error(f"error {response.status_code} {response.content}")
    return response.json()


def call_api_post(url: str, request: dict) -> dict:
    response = requests.post(
        url,
        json=request,
        timeout=8000,
    )
    if response.status_code != 200:
        st.error(f"error {response.status_code} {response.content}")
    return response.json()


def parse_response(response: dict, show_id: bool) -> pd.DataFrame:
    df = pd.DataFrame(response["items"])
    df.index = df.index + 1
    if not show_id:
        df.drop(columns=[col for col in df.columns if "_id" in col], inplace=True)
    return df


def main():
    # sidebar
    with st.sidebar:
        st.markdown(
            "# Big Uh + UniToGo üë®‚Äçüéìüë©‚Äçüéì\n"
            "–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–µ–±–µ –ª—É—á—à–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç!\n"
        )
        with st.expander("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
            limit = st.slider(
                "–õ–∏–º–∏—Ç –≤—ã–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
                min_value=1,
                max_value=50,
                value=15,
                step=1,
            )
            show_id = st.checkbox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å id")

        st.markdown("## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        with st.expander("–£—á–∞—Å—Ç–Ω–∏–∫–∏"):
            _write_list(CONTRIBUTORS)
        with st.expander("–°—Å—ã–ª–∫–∏"):
            _write_list(LINKS)
        with st.expander("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É API"):
            if st.button("Ping"):
                response = call_api_get(endpoint_ping)
                success = st.success(response["response"])
                time.sleep(1)
                success.empty()

    # Main page
    st.markdown("## –†–∞—Å—Å–∫–∞–∂–∏ –Ω–∞–º –ø—Ä–æ —Å–µ–±—è")
    with st.expander("–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è", expanded=True):
        # shit happens...
        if st.checkbox("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏  / –æ—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è"):
            st.markdown("##### –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
            city_title = st.text_input("1", "–ú–æ—Å–∫–≤–∞")

            st.markdown("##### –û —Å–µ–±–µ")
            about = st.text_input("2", "–°—Ç—É–¥–µ–Ω—Ç")

            st.markdown("##### –í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
            activities = st.text_input("3", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞")

            st.markdown("##### –õ—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏")
            books = st.text_input("4", "–ó–∞–¥–∞—á–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ")

            st.markdown("##### –õ—é–±–∏–º—ã–µ –∏–≥—Ä—ã")
            games = st.text_input("5", "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏")

            st.markdown("##### –ò–Ω—Ç–µ—Ä–µ—Å—ã")
            interests = st.text_input("6", "–ú—É–∑—ã–∫–∞, –≤–µ–ª–æ—Å–∏–ø–µ–¥")
        else:
            st.markdown("##### –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
            city_title = st.text_input("1")

            st.markdown("##### –û —Å–µ–±–µ")
            about = st.text_input("2")

            st.markdown("##### –í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
            activities = st.text_input("3")

            st.markdown("##### –õ—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏")
            books = st.text_input("4")

            st.markdown("##### –õ—é–±–∏–º—ã–µ –∏–≥—Ä—ã")
            games = st.text_input("5")

            st.markdown("##### –ò–Ω—Ç–µ—Ä–µ—Å—ã")
            interests = st.text_input("6")

    request = {
        "city_title": city_title,
        "about": about,
        "activities": activities,
        "books": books,
        "games": games,
        "interests": interests,
        "limit": limit,
    }

    if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∞–Ω–∞–ª–∏–∑", use_container_width=True):
        with st.spinner("Wait for it..."):
            response = call_api_post(endpoint_search, request)
        st.success("Done!")
        st.markdown("## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
        result_table = parse_response(response, show_id)
        st.download_button(
            label="–°–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É",
            data=result_table.to_csv().encode("utf-8"),
            file_name=f"{_run_id()}.csv",
            mime="text/csv",
            help="–í —Ñ–æ—Ä–º–∞—Ç–µ csv",
        )
        st.table(result_table)


if __name__ == "__main__":
    st.set_page_config(page_title="–ü–æ–¥–±–æ—Ä —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞")
    main()
